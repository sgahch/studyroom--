[{"C:\\Users\\Ynchen\\Desktop\\软件应用与开发 胡淇_参赛总文件夹\\02素材与源码\\studyroom\\frontend\\src\\main.ts":"1","C:\\Users\\Ynchen\\Desktop\\软件应用与开发 胡淇_参赛总文件夹\\02素材与源码\\studyroom\\frontend\\src\\App.vue":"2","C:\\Users\\Ynchen\\Desktop\\软件应用与开发 胡淇_参赛总文件夹\\02素材与源码\\studyroom\\frontend\\src\\router\\index.ts":"3","C:\\Users\\Ynchen\\Desktop\\软件应用与开发 胡淇_参赛总文件夹\\02素材与源码\\studyroom\\frontend\\src\\views\\Register.vue":"4","C:\\Users\\Ynchen\\Desktop\\软件应用与开发 胡淇_参赛总文件夹\\02素材与源码\\studyroom\\frontend\\src\\views\\Login.vue":"5","C:\\Users\\Ynchen\\Desktop\\软件应用与开发 胡淇_参赛总文件夹\\02素材与源码\\studyroom\\frontend\\src\\views\\ForgotPassword.vue":"6"},{"size":356,"mtime":1745634304233,"results":"7","hashOfConfig":"8"},{"size":352,"mtime":1745563405954,"results":"9","hashOfConfig":"8"},{"size":1360,"mtime":1745659963253,"results":"10","hashOfConfig":"8"},{"size":10476,"mtime":1745656335759,"results":"11","hashOfConfig":"8"},{"size":9263,"mtime":1745656885118,"results":"12","hashOfConfig":"8"},{"size":12077,"mtime":1745669793416,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1sxeb0l",{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"C:\\Users\\Ynchen\\Desktop\\软件应用与开发 胡淇_参赛总文件夹\\02素材与源码\\studyroom\\frontend\\src\\main.ts",[],"C:\\Users\\Ynchen\\Desktop\\软件应用与开发 胡淇_参赛总文件夹\\02素材与源码\\studyroom\\frontend\\src\\App.vue",[],"C:\\Users\\Ynchen\\Desktop\\软件应用与开发 胡淇_参赛总文件夹\\02素材与源码\\studyroom\\frontend\\src\\router\\index.ts",[],"C:\\Users\\Ynchen\\Desktop\\软件应用与开发 胡淇_参赛总文件夹\\02素材与源码\\studyroom\\frontend\\src\\views\\Register.vue",["29"],"<template>\r\n  <!-- 注册页面容器 -->\r\n  <div class=\"register-container\">\r\n    <!-- 注册卡片 -->\r\n    <div class=\"register-card\">\r\n      <!-- Logo和标题容器 -->\r\n      <div class=\"logo-container\">\r\n        <!-- 你可以用回 Login 页面的 logo，或者用 Django 页面的 H logo -->\r\n        <img src=\"/img/logo1.png\" alt=\"Logo\" class=\"logo\">\r\n        <h1 class=\"system-title\">用户注册</h1>\r\n      </div>\r\n\r\n      <!-- 注册表单 -->\r\n      <form @submit.prevent=\"handleRegister\" class=\"register-form\">\r\n        <!-- 用户名输入框 -->\r\n        <div class=\"form-group\">\r\n          <div class=\"input-container\">\r\n            <label>用户名</label>\r\n            <input\r\n              v-model=\"username\"\r\n              type=\"text\"\r\n              required\r\n              placeholder=\"请输入用户名\"\r\n              :disabled=\"loading\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 密码输入框 -->\r\n        <div class=\"form-group\">\r\n          <div class=\"input-container\">\r\n            <label>密码</label>\r\n            <input\r\n              v-model=\"password\"\r\n              type=\"password\"\r\n              required\r\n              placeholder=\"请输入密码\"\r\n              :disabled=\"loading\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 用户图片上传 -->\r\n        <div class=\"form-group\">\r\n          <div class=\"input-container\">\r\n            <label>用户图片</label>\r\n            <!-- 基础文件上传样式，可以后续美化 -->\r\n            <input\r\n              type=\"file\"\r\n              @change=\"handleFileChange\"\r\n              accept=\"image/*\"\r\n              :disabled=\"loading\"\r\n              class=\"file-input\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 手机号输入框 -->\r\n        <div class=\"form-group\">\r\n          <div class=\"input-container\">\r\n            <label>手机号</label>\r\n            <input\r\n              v-model=\"phone\"\r\n              type=\"tel\"\r\n              required\r\n              placeholder=\"请输入手机号\"\r\n              :disabled=\"loading\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 邮箱输入框 -->\r\n        <div class=\"form-group\">\r\n          <div class=\"input-container\">\r\n            <label>邮箱</label>\r\n            <input\r\n              v-model=\"email\"\r\n              type=\"email\"\r\n              required\r\n              placeholder=\"请输入邮箱\"\r\n              :disabled=\"loading\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 错误信息显示 -->\r\n        <div v-if=\"error\" class=\"error-message\">\r\n          <i class=\"fas fa-exclamation-circle\"></i>\r\n          {{ error }}\r\n        </div>\r\n\r\n        <!-- 注册按钮 -->\r\n        <button type=\"submit\" :disabled=\"loading\" class=\"register-button\">\r\n          <span v-if=\"loading\">注册中...</span>\r\n          <span v-else>注册</span>\r\n        </button>\r\n\r\n        <!-- 返回登录链接 -->\r\n        <div class=\"additional-links\">\r\n          <a href=\"#\" @click.prevent=\"goToLogin\" class=\"login-link\">已有账号？返回登录</a>\r\n        </div>\r\n\r\n        <!-- 版权信息 -->\r\n        <div class=\"copyright\">\r\n          © 2000-2024 自习室预约系统\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, ref } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport axios from 'axios'\r\n\r\nexport default defineComponent({\r\n  name: 'RegisterView',\r\n  setup() {\r\n    const router = useRouter()\r\n    const username = ref('')\r\n    const password = ref('')\r\n    const photo = ref<File | null>(null) // 用于存储文件对象\r\n    const phone = ref('')\r\n    const email = ref('')\r\n    const loading = ref(false)\r\n    const error = ref('')\r\n\r\n    const handleFileChange = (event: Event) => {\r\n      const target = event.target as HTMLInputElement\r\n      if (target.files && target.files[0]) {\r\n        photo.value = target.files[0]\r\n      } else {\r\n        photo.value = null\r\n      }\r\n    }\r\n\r\n    const handleRegister = async () => {\r\n      if (!photo.value) {\r\n        error.value = '请选择用户图片'\r\n        return\r\n      }\r\n\r\n      loading.value = true\r\n      error.value = ''\r\n\r\n      // 使用 FormData 来发送包含文件的表单数据\r\n      const formData = new FormData()\r\n      formData.append('name', username.value)\r\n      formData.append('password', password.value)\r\n      formData.append('phone', phone.value)\r\n      formData.append('email', email.value)\r\n      formData.append('photo', photo.value) // 添加文件对象\r\n\r\n      try {\r\n        // 假设后端注册 API 端点是 /api/register/\r\n        // 注意：后端需要能处理 multipart/form-data\r\n        const response = await axios.post('/api/register/', formData, {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data' // 必须设置\r\n          },\r\n          withCredentials: true // 如果需要 cookie 认证\r\n        })\r\n\r\n        if (response.data.success) {\r\n          // 注册成功，可以提示用户并跳转到登录页\r\n          alert('注册成功！请登录。') // 简单提示\r\n          router.push('/login') // 跳转到登录页\r\n        } else {\r\n          error.value = response.data.message || '注册失败，请检查输入信息'\r\n        }\r\n      } catch (err: any) {\r\n        console.error('Register error:', err)\r\n        if (err.response && err.response.data && err.response.data.message) {\r\n           error.value = err.response.data.message\r\n        } else {\r\n           error.value = '注册失败，请稍后重试'\r\n        }\r\n      } finally {\r\n        loading.value = false\r\n      }\r\n    }\r\n\r\n    const goToLogin = () => {\r\n      router.push('/login')\r\n    }\r\n\r\n    return {\r\n      username,\r\n      password,\r\n      phone,\r\n      email,\r\n      loading,\r\n      error,\r\n      handleFileChange,\r\n      handleRegister,\r\n      goToLogin\r\n    }\r\n  }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n/* 复用 Login.vue 的大部分样式 */\r\n.register-container {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-height: 100vh;\r\n  width: 100vw;\r\n  padding: 20px;\r\n  background-image: url('@/assets/images/666.png'); /* 与登录页背景一致 */\r\n  background-size: 100% 100%;\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  background-color: #f5f5f5;\r\n  position: relative;\r\n  font-family: 'PingFang SC', 'Microsoft YaHei', sans-serif;\r\n  overflow: hidden;\r\n\r\n  @media (max-width: 768px) {\r\n    background-size: cover;\r\n  }\r\n}\r\n\r\n.register-card {\r\n  background: rgba(255, 255, 255, 0.7);\r\n  padding: 30px;\r\n  border-radius: 20px;\r\n  box-shadow: 0 8px 32px rgba(31, 38, 135, 0.15);\r\n  width: 100%;\r\n  max-width: 420px; /* 可以比登录略宽一点以容纳更多字段 */\r\n  position: relative;\r\n  z-index: 1;\r\n  animation: cardFloat 6s ease-in-out infinite;\r\n  backdrop-filter: blur(8px);\r\n  -webkit-backdrop-filter: blur(8px);\r\n  border: 1px solid rgba(255, 255, 255, 0.3);\r\n\r\n  &::before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    z-index: -1;\r\n    border-radius: 20px;\r\n    background: linear-gradient(\r\n      45deg,\r\n      rgba(255, 255, 255, 0.1),\r\n      rgba(255, 255, 255, 0.2)\r\n    );\r\n  }\r\n}\r\n\r\n.logo-container {\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n\r\n  .logo {\r\n    width: 80px;\r\n    height: 80px;\r\n    border-radius: 50%;\r\n    object-fit: cover;\r\n    box-shadow: 0 0 20px rgba(107, 115, 255, 0.2);\r\n    border: 2px solid rgba(107, 115, 255, 0.3);\r\n    padding: 0;\r\n    background: white;\r\n    transition: transform 0.3s ease;\r\n\r\n    &:hover {\r\n      transform: scale(1.05);\r\n    }\r\n  }\r\n\r\n  .system-title {\r\n    font-size: 20px;\r\n    color: #333;\r\n    margin: 10px 0;\r\n    font-weight: 600;\r\n    background: linear-gradient(45deg, #ff9a9e 0%, #fad0c4 100%);\r\n    -webkit-background-clip: text;\r\n    -webkit-text-fill-color: transparent;\r\n  }\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 16px;\r\n\r\n  .input-container {\r\n    label {\r\n      display: block;\r\n      color: #666;\r\n      font-size: 14px;\r\n      margin-bottom: 6px;\r\n      font-weight: 500;\r\n    }\r\n\r\n    input[type=\"text\"],\r\n    input[type=\"password\"],\r\n    input[type=\"tel\"],\r\n    input[type=\"email\"] {\r\n      width: 100%;\r\n      padding: 10px 12px;\r\n      border: 1px solid #eee;\r\n      border-radius: 8px;\r\n      font-size: 14px;\r\n      transition: all 0.3s ease;\r\n      background: rgba(255, 255, 255, 0.9);\r\n\r\n      &:focus {\r\n        outline: none;\r\n        border-color: #ff9a9e;\r\n        box-shadow: 0 0 0 3px rgba(255, 154, 158, 0.1);\r\n      }\r\n\r\n      &::placeholder {\r\n        color: #aaa;\r\n      }\r\n    }\r\n\r\n    .file-input {\r\n      /* 简单样式，可以进一步美化 */\r\n       display: block;\r\n       width: 100%;\r\n       padding: 8px 12px;\r\n       font-size: 14px;\r\n       color: #666;\r\n       background-color: rgba(255, 255, 255, 0.9);\r\n       border: 1px solid #eee;\r\n       border-radius: 8px;\r\n       cursor: pointer;\r\n    }\r\n  }\r\n}\r\n\r\n.register-button {\r\n  width: 100%;\r\n  padding: 12px;\r\n  background: linear-gradient(135deg, #ff9a9e 0%, #fad0c4 100%); /* 与登录按钮颜色一致 */\r\n  color: white;\r\n  border: none;\r\n  border-radius: 8px;\r\n  font-size: 15px;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n  margin-bottom: 16px;\r\n\r\n  &:hover:not(:disabled) {\r\n    transform: translateY(-2px);\r\n    box-shadow: 0 4px 15px rgba(255, 154, 158, 0.4);\r\n  }\r\n\r\n  &:disabled {\r\n    background: #ccc;\r\n    cursor: not-allowed;\r\n  }\r\n}\r\n\r\n.additional-links {\r\n  text-align: center; /* 居中显示返回登录链接 */\r\n  margin-top: 8px;\r\n\r\n  a {\r\n    color: #ff9a9e;\r\n    text-decoration: none;\r\n    font-size: 13px;\r\n    transition: color 0.3s ease;\r\n\r\n    &:hover {\r\n      color: #ff7a7e;\r\n    }\r\n  }\r\n}\r\n\r\n.error-message {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  padding: 10px 12px;\r\n  background: #fff5f5;\r\n  color: #e53e3e;\r\n  border-radius: 8px;\r\n  font-size: 13px;\r\n  border: 1px solid #fed7d7;\r\n  margin-bottom: 16px;\r\n}\r\n\r\n.copyright {\r\n  text-align: center;\r\n  color: #999;\r\n  font-size: 12px;\r\n  margin-top: 20px;\r\n}\r\n\r\n@keyframes cardFloat {\r\n  0%, 100% { transform: translateY(0); }\r\n  50% { transform: translateY(-10px); }\r\n}\r\n\r\n@media (max-width: 480px) {\r\n  .register-card {\r\n    padding: 20px;\r\n  }\r\n  .system-title {\r\n    font-size: 18px;\r\n  }\r\n  .logo {\r\n    width: 70px;\r\n    height: 70px;\r\n  }\r\n}\r\n\r\n</style> ","C:\\Users\\Ynchen\\Desktop\\软件应用与开发 胡淇_参赛总文件夹\\02素材与源码\\studyroom\\frontend\\src\\views\\Login.vue",["30"],"<template>\n  <!-- 登录页面容器 -->\n  <div class=\"login-container\">\n    <!-- 登录卡片 -->\n    <div class=\"login-card\">\n      <!-- Logo和标题容器 -->\n      <div class=\"logo-container\">\n        <img src=\"/img/logo1.png\" alt=\"Logo\" class=\"logo\">\n        <h1 class=\"system-title\">自习室预约系统</h1>\n      </div>\n\n      <!-- 登录表单 -->\n      <form @submit.prevent=\"handleLogin\" class=\"login-form\">\n        <!-- 用户名输入框 -->\n        <div class=\"form-group\">\n          <div class=\"input-container\">\n            <label>用户名</label>\n            <input\n              v-model=\"username\"\n              type=\"text\"\n              required\n              placeholder=\"请输入用户名\"\n              :disabled=\"loading\"\n            />\n          </div>\n        </div>\n        \n        <!-- 密码输入框 -->\n        <div class=\"form-group\">\n          <div class=\"input-container\">\n            <label>密码</label>\n            <input\n              v-model=\"password\"\n              type=\"password\"\n              required\n              placeholder=\"请输入密码\"\n              :disabled=\"loading\"\n            />\n          </div>\n        </div>\n\n        <!-- 记住我选项 -->\n        <div class=\"remember-me\">\n          <label>\n            <input type=\"checkbox\" v-model=\"rememberMe\">\n            记住我\n          </label>\n        </div>\n\n        <!-- 错误信息显示 -->\n        <div v-if=\"error\" class=\"error-message\">\n          <i class=\"fas fa-exclamation-circle\"></i>\n          {{ error }}\n        </div>\n\n        <!-- 登录按钮 -->\n        <button type=\"submit\" :disabled=\"loading\" class=\"login-button\">\n          <span v-if=\"loading\">登录中...</span>\n          <span v-else>登录</span>\n        </button>\n\n        <!-- 管理员登录按钮 -->\n        <button type=\"button\" class=\"admin-login-button\" @click=\"goToAdminLogin\">\n          管理员登录\n        </button>\n\n        <!-- 额外链接 -->\n        <div class=\"additional-links\">\n          <a href=\"#\" @click.prevent=\"goToRegister\" class=\"register-link\">注册账号</a>\n          <a href=\"#\" @click.prevent=\"goToForgotPassword\" class=\"forgot-password\">忘记密码？</a>\n        </div>\n\n        <!-- 版权信息 -->\n        <div class=\"copyright\">\n          © 2000-2024 自习室预约系统\n        </div>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref } from 'vue'\nimport { useRouter } from 'vue-router'\nimport axios from 'axios'\n\nexport default defineComponent({\n  name: 'LoginView',\n  setup() {\n    const router = useRouter()\n    const username = ref('')\n    const password = ref('')\n    const loading = ref(false)\n    const error = ref('')\n    const rememberMe = ref(false)\n\n    const handleLogin = async () => {\n      loading.value = true\n      error.value = ''\n      \n      try {\n        const response = await axios.post('/api/login/', {\n          name: username.value,\n          password: password.value,\n          remember_me: rememberMe.value\n        }, {\n          withCredentials: true\n        })\n\n        if (response.data.success) {\n          if (response.data.redirect_url) {\n            window.location.href = response.data.redirect_url\n          } else {\n            window.location.href = '/'\n          }\n        } else {\n          error.value = response.data.message || '登录失败，请检查账号和密码'\n        }\n      } catch (err: any) {\n        console.error('Login error:', err)\n        error.value = '用户登录失败，请稍后重试'\n      } finally {\n        loading.value = false\n      }\n    }\n\n    const goToAdminLogin = () => {\n      window.location.href = 'http://localhost:8000/admin/login/'\n    }\n\n    const goToRegister = () => {\n      router.push('/register')\n    }\n\n    const goToForgotPassword = () => {\n      router.push('/forgot-password')\n    }\n\n    return {\n      username,\n      password,\n      loading,\n      error,\n      rememberMe,\n      handleLogin,\n      goToAdminLogin,\n      goToRegister,\n      goToForgotPassword\n    }\n  }\n})\n</script>\n\n<style lang=\"scss\" scoped>\n/* 登录页面容器样式 */\n.login-container {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-height: 100vh;\n  width: 100vw;\n  padding: 20px;\n  background-image: url('@/assets/images/666.png');\n  background-size: 100% 100%;\n  background-position: center;\n  background-repeat: no-repeat;\n  background-color: #f5f5f5;\n  position: relative;\n  font-family: 'PingFang SC', 'Microsoft YaHei', sans-serif;\n  overflow: hidden;\n\n  @media (max-width: 768px) {\n    background-size: cover;\n  }\n}\n\n/* 登录卡片样式 */\n.login-card {\n  background: rgba(255, 255, 255, 0.7);\n  padding: 30px;\n  border-radius: 20px;\n  box-shadow: 0 8px 32px rgba(31, 38, 135, 0.15);\n  width: 100%;\n  max-width: 380px;\n  position: relative;\n  z-index: 1;\n  animation: cardFloat 6s ease-in-out infinite;\n  backdrop-filter: blur(8px);\n  -webkit-backdrop-filter: blur(8px);\n  border: 1px solid rgba(255, 255, 255, 0.3);\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    z-index: -1;\n    border-radius: 20px;\n    background: linear-gradient(\n      45deg,\n      rgba(255, 255, 255, 0.1),\n      rgba(255, 255, 255, 0.2)\n    );\n  }\n}\n\n/* Logo容器样式 */\n.logo-container {\n  text-align: center;\n  margin-bottom: 20px;\n  \n  .logo {\n    width: 80px;\n    height: 80px;\n    border-radius: 50%;\n    object-fit: cover; /* 修改回cover以填充满圆形 */\n    box-shadow: 0 0 20px rgba(107, 115, 255, 0.2);\n    border: 2px solid rgba(107, 115, 255, 0.3);\n    padding: 0; /* 移除内边距使图片完全填充 */\n    background: white;\n    transition: transform 0.3s ease;\n    \n    &:hover {\n      transform: scale(1.05);\n    }\n  }\n\n  /* 系统标题样式 */\n  .system-title {\n    font-size: 20px;\n    color: #333;\n    margin: 10px 0;\n    font-weight: 600;\n    background: linear-gradient(45deg, #ff9a9e 0%, #fad0c4 100%);\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n  }\n}\n\n.login-title {\n  text-align: center;\n  color: #333;\n  margin-bottom: 30px;\n  font-size: 24px;\n  font-weight: 500;\n}\n\n/* 表单组样式 */\n.form-group {\n  margin-bottom: 16px;\n\n  .input-container {\n    label {\n      display: block;\n      color: #666;\n      font-size: 14px;\n      margin-bottom: 6px;\n      font-weight: 500;\n    }\n\n    input {\n      width: 100%;\n      padding: 10px 12px;\n      border: 1px solid #eee;\n      border-radius: 8px;\n      font-size: 14px;\n      transition: all 0.3s ease;\n      background: rgba(255, 255, 255, 0.9);\n\n      &:focus {\n        outline: none;\n        border-color: #ff9a9e;\n        box-shadow: 0 0 0 3px rgba(255, 154, 158, 0.1);\n      }\n\n      &::placeholder {\n        color: #aaa;\n      }\n    }\n  }\n}\n\n/* 记住我选项样式 */\n.remember-me {\n  display: flex;\n  align-items: center;\n  margin-bottom: 16px;\n  \n  label {\n    display: flex;\n    align-items: center;\n    gap: 6px;\n    color: #666;\n    font-size: 13px;\n    cursor: pointer;\n\n    input[type=\"checkbox\"] {\n      width: 14px;\n      height: 14px;\n      accent-color: #ff9a9e;\n    }\n  }\n}\n\n/* 登录按钮样式 */\n.login-button {\n  width: 100%;\n  padding: 12px;\n  background: linear-gradient(135deg, #ff9a9e 0%, #fad0c4 100%);\n  color: white;\n  border: none;\n  border-radius: 8px;\n  font-size: 15px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  margin-bottom: 16px;\n\n  &:hover:not(:disabled) {\n    transform: translateY(-2px);\n    box-shadow: 0 4px 15px rgba(255, 154, 158, 0.4);\n  }\n\n  &:disabled {\n    background: #ccc;\n    cursor: not-allowed;\n  }\n}\n\n/* 管理员登录按钮样式 */\n.admin-login-button {\n  width: 100%;\n  padding: 12px;\n  background: transparent;\n  color: #666;\n  border: 2px solid rgba(255, 154, 158, 0.5);\n  border-radius: 8px;\n  font-size: 15px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  margin-bottom: 16px;\n  margin-top: 8px;\n\n  &:hover:not(:disabled) {\n    background: rgba(255, 154, 158, 0.1);\n    border-color: #ff9a9e;\n    color: #ff9a9e;\n  }\n\n  &:disabled {\n    background: #ccc;\n    cursor: not-allowed;\n  }\n}\n\n/* 额外链接样式 */\n.additional-links {\n  display: flex;\n  justify-content: space-between;\n  margin-top: 8px;\n  \n  a {\n    color: #ff9a9e;\n    text-decoration: none;\n    font-size: 13px;\n    transition: color 0.3s ease;\n\n    &:hover {\n      color: #ff7a7e;\n    }\n  }\n}\n\n/* 错误信息样式 */\n.error-message {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 10px 12px;\n  background: #fff5f5;\n  color: #e53e3e;\n  border-radius: 8px;\n  font-size: 13px;\n  border: 1px solid #fed7d7;\n  margin-bottom: 16px;\n}\n\n/* 版权信息样式 */\n.copyright {\n  text-align: center;\n  color: #999;\n  font-size: 12px;\n  margin-top: 20px;\n}\n\n/* 登录卡片浮动动画 */\n@keyframes cardFloat {\n  0%, 100% { transform: translateY(0); }\n  50% { transform: translateY(-10px); }\n}\n\n/* 响应式布局 */\n@media (max-width: 480px) {\n  .login-card {\n    padding: 20px;\n  }\n\n  .system-title {\n    font-size: 18px;\n  }\n\n  .logo {\n    width: 70px;\n    height: 70px;\n  }\n\n  .login-type-switch .switch-btn {\n    padding: 8px 16px;\n    font-size: 13px;\n  }\n}\n\n.additional-links a {\n  cursor: pointer;\n}\n</style> ","C:\\Users\\Ynchen\\Desktop\\软件应用与开发 胡淇_参赛总文件夹\\02素材与源码\\studyroom\\frontend\\src\\views\\ForgotPassword.vue",["31","32"],"<template>\r\n  <!-- 忘记密码页面容器 -->\r\n  <div class=\"forgot-password-container\">\r\n    <!-- 卡片 -->\r\n    <div class=\"forgot-password-card\">\r\n      <!-- Logo和标题容器 -->\r\n      <div class=\"logo-container\">\r\n        <img src=\"/img/logo1.png\" alt=\"Logo\" class=\"logo\">\r\n        <h1 class=\"system-title\">{{ step === 1 ? '忘记密码' : '重置密码' }}</h1>\r\n      </div>\r\n\r\n      <!-- 表单 -->\r\n      <form @submit.prevent=\"handleSubmit\" class=\"forgot-password-form\">\r\n        <!-- 步骤 1: 输入邮箱 -->\r\n        <div v-if=\"step === 1\">\r\n          <p class=\"instructions\">请输入您的注册邮箱，我们将向该邮箱发送验证码。</p>\r\n          <div class=\"form-group\">\r\n            <div class=\"input-container\">\r\n              <label>邮箱</label>\r\n              <input\r\n                v-model=\"email\"\r\n                type=\"email\"\r\n                required\r\n                placeholder=\"请输入注册邮箱\"\r\n                :disabled=\"loading\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 步骤 2: 输入验证码和新密码 -->\r\n        <div v-if=\"step === 2\">\r\n          <p class=\"instructions\">验证码已发送至 {{ email }}，请输入验证码和新密码。</p>\r\n          <div class=\"form-group\">\r\n            <div class=\"input-container\">\r\n              <label>验证码</label>\r\n              <input\r\n                v-model=\"verificationCode\"\r\n                type=\"text\"\r\n                required\r\n                placeholder=\"请输入 6 位验证码\"\r\n                :disabled=\"loading\"\r\n                maxlength=\"6\"\r\n                autocomplete=\"off\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <div class=\"input-container\">\r\n              <label>新密码</label>\r\n              <input\r\n                v-model=\"newPassword\"\r\n                type=\"password\"\r\n                required\r\n                placeholder=\"请输入新密码\"\r\n                :disabled=\"loading\"\r\n                autocomplete=\"new-password\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <div class=\"input-container\">\r\n              <label>确认新密码</label>\r\n              <input\r\n                v-model=\"confirmPassword\"\r\n                type=\"password\"\r\n                required\r\n                placeholder=\"请再次输入新密码\"\r\n                :disabled=\"loading\"\r\n                autocomplete=\"new-password\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 通用信息显示 -->\r\n        <div v-if=\"successMessage\" class=\"success-message\">\r\n          <i class=\"fas fa-check-circle\"></i>\r\n          {{ successMessage }}\r\n        </div>\r\n        <div v-if=\"error\" class=\"error-message\">\r\n          <i class=\"fas fa-exclamation-circle\"></i>\r\n          {{ error }}\r\n        </div>\r\n\r\n        <!-- 根据步骤显示不同按钮 -->\r\n        <button type=\"submit\" :disabled=\"loading || isResetComplete\" class=\"submit-button\">\r\n          <span v-if=\"loading\">{{ step === 1 ? '发送中...' : '设置中...' }}</span>\r\n          <span v-else>{{ step === 1 ? '发送验证码' : '确认重置密码' }}</span>\r\n        </button>\r\n\r\n        <!-- 返回登录链接 -->\r\n        <div class=\"additional-links\">\r\n          <a href=\"#\" @click.prevent=\"goToLogin\" class=\"login-link\">返回登录</a>\r\n        </div>\r\n\r\n        <!-- 版权信息 -->\r\n        <div class=\"copyright\">\r\n          © 2000-2024 自习室预约系统\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, ref } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport axios from 'axios'\r\n\r\nexport default defineComponent({\r\n  name: 'ForgotPasswordView',\r\n  setup() {\r\n    const router = useRouter()\r\n    const step = ref(1) // 1: 输入邮箱, 2: 输入验证码和新密码\r\n    const email = ref('')\r\n    const verificationCode = ref('')\r\n    const newPassword = ref('')\r\n    const confirmPassword = ref('')\r\n    const loading = ref(false)\r\n    const error = ref('')\r\n    const successMessage = ref('')\r\n    const isResetComplete = ref(false) // 新增状态：标记重置是否完成\r\n\r\n    // 请求发送验证码\r\n    const requestCode = async () => {\r\n      loading.value = true\r\n      error.value = ''\r\n      successMessage.value = ''\r\n\r\n      try {\r\n        const response = await axios.post('/api/password/reset/request/', {\r\n          email: email.value\r\n        }, { withCredentials: true })\r\n\r\n        if (response.data.success) {\r\n          successMessage.value = response.data.message || '验证码已发送至您的邮箱，请注意查收。'\r\n          step.value = 2 // 进入下一步\r\n        } else {\r\n          error.value = response.data.message || '请求失败，请稍后重试'\r\n        }\r\n      } catch (err: any) {\r\n        console.error('Request code error:', err)\r\n        if (err.response && err.response.data && err.response.data.message) {\r\n           error.value = err.response.data.message\r\n        } else {\r\n           error.value = '请求失败，请检查邮箱地址或稍后重试'\r\n        }\r\n      } finally {\r\n        loading.value = false\r\n      }\r\n    }\r\n\r\n    // 使用验证码重置密码\r\n    const resetPasswordWithCode = async () => {\r\n      if (newPassword.value !== confirmPassword.value) {\r\n        error.value = '两次输入的密码不一致'\r\n        return\r\n      }\r\n      if (!verificationCode.value || verificationCode.value.length !== 6) {\r\n          error.value = '请输入 6 位验证码'\r\n          return\r\n      }\r\n\r\n      loading.value = true\r\n      error.value = ''\r\n      successMessage.value = '' // 清除之前的成功消息\r\n\r\n      try {\r\n        const response = await axios.post('/api/password/reset/with_code/', {\r\n          email: email.value, // 需要提交 email\r\n          code: verificationCode.value,\r\n          new_password: newPassword.value,\r\n          confirm_password: confirmPassword.value\r\n        })\r\n\r\n        if (response.data.success) {\r\n          successMessage.value = response.data.message || '密码重置成功！请使用新密码登录。'\r\n          isResetComplete.value = true // 设置重置完成状态\r\n          // 清空输入框，停留在成功页面\r\n          verificationCode.value = ''\r\n          newPassword.value = ''\r\n          confirmPassword.value = ''\r\n        } else {\r\n          error.value = response.data.message || '密码重置失败'\r\n          // 密码重置失败时不清空验证码和密码，方便用户修改\r\n        }\r\n      } catch (err: any) {\r\n        console.error('Reset password with code error:', err)\r\n        if (err.response && err.response.data && err.response.data.message) {\r\n           error.value = err.response.data.message\r\n        } else {\r\n           error.value = '密码重置失败，验证码可能已失效或发生错误。'\r\n        }\r\n      } finally {\r\n        loading.value = false\r\n      }\r\n    }\r\n\r\n    // 根据当前步骤决定提交哪个方法\r\n    const handleSubmit = () => {\r\n      if (step.value === 1) {\r\n        successMessage.value = '' // 清除可能残留的消息\r\n        requestCode()\r\n      } else {\r\n        successMessage.value = '' // 清除可能残留的消息\r\n        resetPasswordWithCode()\r\n      }\r\n    }\r\n\r\n    const goToLogin = () => {\r\n      router.push('/login')\r\n    }\r\n\r\n    return {\r\n      step,\r\n      email,\r\n      verificationCode,\r\n      newPassword,\r\n      confirmPassword,\r\n      loading,\r\n      error,\r\n      successMessage,\r\n      isResetComplete,\r\n      handleSubmit,\r\n      goToLogin\r\n    }\r\n  }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n/* 复用 Login.vue / Register.vue 的样式 */\r\n.forgot-password-container {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-height: 100vh;\r\n  width: 100vw;\r\n  padding: 20px;\r\n  background-image: url('@/assets/images/666.png');\r\n  background-size: 100% 100%;\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  background-color: #f5f5f5;\r\n  position: relative;\r\n  font-family: 'PingFang SC', 'Microsoft YaHei', sans-serif;\r\n  overflow: hidden;\r\n\r\n  @media (max-width: 768px) {\r\n    background-size: cover;\r\n  }\r\n}\r\n\r\n.forgot-password-card {\r\n  background: rgba(255, 255, 255, 0.7);\r\n  padding: 30px;\r\n  border-radius: 20px;\r\n  box-shadow: 0 8px 32px rgba(31, 38, 135, 0.15);\r\n  width: 100%;\r\n  max-width: 400px; /* 调整宽度 */\r\n  position: relative;\r\n  z-index: 1;\r\n  animation: cardFloat 6s ease-in-out infinite;\r\n  backdrop-filter: blur(8px);\r\n  -webkit-backdrop-filter: blur(8px);\r\n  border: 1px solid rgba(255, 255, 255, 0.3);\r\n\r\n  &::before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    z-index: -1;\r\n    border-radius: 20px;\r\n    background: linear-gradient(\r\n      45deg,\r\n      rgba(255, 255, 255, 0.1),\r\n      rgba(255, 255, 255, 0.2)\r\n    );\r\n  }\r\n}\r\n\r\n.logo-container {\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n\r\n  .logo {\r\n    width: 80px;\r\n    height: 80px;\r\n    border-radius: 50%;\r\n    object-fit: cover;\r\n    box-shadow: 0 0 20px rgba(107, 115, 255, 0.2);\r\n    border: 2px solid rgba(107, 115, 255, 0.3);\r\n    padding: 0;\r\n    background: white;\r\n    transition: transform 0.3s ease;\r\n\r\n    &:hover {\r\n      transform: scale(1.05);\r\n    }\r\n  }\r\n\r\n  .system-title {\r\n    font-size: 20px;\r\n    color: #333;\r\n    margin: 10px 0;\r\n    font-weight: 600;\r\n    background: linear-gradient(45deg, #ff9a9e 0%, #fad0c4 100%);\r\n    -webkit-background-clip: text;\r\n    -webkit-text-fill-color: transparent;\r\n  }\r\n}\r\n\r\n.instructions {\r\n  color: #666;\r\n  font-size: 14px;\r\n  margin-bottom: 20px;\r\n  text-align: center;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 16px;\r\n\r\n  .input-container {\r\n    label {\r\n      display: block;\r\n      color: #666;\r\n      font-size: 14px;\r\n      margin-bottom: 6px;\r\n      font-weight: 500;\r\n    }\r\n\r\n    input[type=\"email\"],\r\n    input[type=\"text\"],\r\n    input[type=\"password\"] {\r\n      width: 100%;\r\n      padding: 10px 12px;\r\n      border: 1px solid #eee;\r\n      border-radius: 8px;\r\n      font-size: 14px;\r\n      transition: all 0.3s ease;\r\n      background: rgba(255, 255, 255, 0.9);\r\n\r\n      &:focus {\r\n        outline: none;\r\n        border-color: #ff9a9e;\r\n        box-shadow: 0 0 0 3px rgba(255, 154, 158, 0.1);\r\n      }\r\n\r\n      &::placeholder {\r\n        color: #aaa;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.submit-button {\r\n  width: 100%;\r\n  padding: 12px;\r\n  background: linear-gradient(135deg, #ff9a9e 0%, #fad0c4 100%);\r\n  color: white;\r\n  border: none;\r\n  border-radius: 8px;\r\n  font-size: 15px;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n  margin-bottom: 16px;\r\n  margin-top: 8px; /* 加一点上边距 */\r\n\r\n  &:hover:not(:disabled) {\r\n    transform: translateY(-2px);\r\n    box-shadow: 0 4px 15px rgba(255, 154, 158, 0.4);\r\n  }\r\n\r\n  &:disabled {\r\n    background: #ccc;\r\n    cursor: not-allowed;\r\n  }\r\n}\r\n\r\n.additional-links {\r\n  text-align: center;\r\n  margin-top: 8px;\r\n\r\n  a {\r\n    color: #ff9a9e;\r\n    text-decoration: none;\r\n    font-size: 13px;\r\n    transition: color 0.3s ease;\r\n\r\n    &:hover {\r\n      color: #ff7a7e;\r\n    }\r\n  }\r\n}\r\n\r\n.success-message,\r\n.error-message {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  padding: 10px 12px;\r\n  border-radius: 8px;\r\n  font-size: 13px;\r\n  border: 1px solid;\r\n  margin-bottom: 16px;\r\n}\r\n\r\n.success-message {\r\n  background: #f0fff4;\r\n  color: #2f855a;\r\n  border-color: #9ae6b4;\r\n}\r\n\r\n.error-message {\r\n  background: #fff5f5;\r\n  color: #e53e3e;\r\n  border-color: #fed7d7;\r\n}\r\n\r\n.copyright {\r\n  text-align: center;\r\n  color: #999;\r\n  font-size: 12px;\r\n  margin-top: 20px;\r\n}\r\n\r\n@keyframes cardFloat {\r\n  0%, 100% { transform: translateY(0); }\r\n  50% { transform: translateY(-10px); }\r\n}\r\n\r\n@media (max-width: 480px) {\r\n  .forgot-password-card {\r\n    padding: 20px;\r\n  }\r\n  .system-title {\r\n    font-size: 18px;\r\n  }\r\n  .logo {\r\n    width: 70px;\r\n    height: 70px;\r\n  }\r\n}\r\n\r\n</style> ",{"ruleId":"33","severity":1,"message":"34","line":172,"column":21,"nodeType":"35","messageId":"36","endLine":172,"endColumn":24,"suggestions":"37"},{"ruleId":"33","severity":1,"message":"34","line":119,"column":21,"nodeType":"35","messageId":"36","endLine":119,"endColumn":24,"suggestions":"38"},{"ruleId":"33","severity":1,"message":"34","line":142,"column":21,"nodeType":"35","messageId":"36","endLine":142,"endColumn":24,"suggestions":"39"},{"ruleId":"33","severity":1,"message":"34","line":188,"column":21,"nodeType":"35","messageId":"36","endLine":188,"endColumn":24,"suggestions":"40"},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["41","42"],["43","44"],["45","46"],["47","48"],{"messageId":"49","fix":"50","desc":"51"},{"messageId":"52","fix":"53","desc":"54"},{"messageId":"49","fix":"55","desc":"51"},{"messageId":"52","fix":"56","desc":"54"},{"messageId":"49","fix":"57","desc":"51"},{"messageId":"52","fix":"58","desc":"54"},{"messageId":"49","fix":"59","desc":"51"},{"messageId":"52","fix":"60","desc":"54"},"suggestUnknown",{"range":"61","text":"62"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"61","text":"63"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"64","text":"62"},{"range":"64","text":"63"},{"range":"65","text":"62"},{"range":"65","text":"63"},{"range":"66","text":"62"},{"range":"66","text":"63"},[4804,4807],"unknown","never",[3178,3181],[4435,4438],[5938,5941]]